/*******************************************************************************
 * Copyright (c) 2013 Michael Vorburger (http://www.vorburger.ch).
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/

grammar ch.vorburger.xobjects.XObjects with org.eclipse.xtext.xbase.Xbase

generate xObjects "http://www.vorburger.ch/xobjects/XObjects"

// package is NOT to be used to determine where the *.java file will be written to - only to qualify the XObject's name (if it has any) 

XObject:
	// TODO Documentation! And add it to XObjectsJvmModelInferrer..
	JavaXObject // TODO | EcoreXObject
;

JavaXObject:
	"java:" type = JvmTypeReference 
	name = ID // name has to be mandatory for QualifiedName stuff and Code Generator ;(
	// The 'from' syntax is if you don't want just a "new {Type}()", but have to call some factory method..
	("from" from = XExpression)?
	// TODO LOW enable type inference.. technically if 'from' is given, we would not have to have 'type'.. but I don't know how to do that (with correct editor support)
	'{'
    	// TODO (properties += PropertyAssignment)*
  	'}'
;

PropertyAssignment:
	// TODO like this? feature=[types::JvmIdentifiableElement|ValidID]
	name=ID // TODO not ID, but directly refer to a property/field.. how to? how does this work in xtend for new .. => [ ? 
	':'
	value=XExpression
;

/*
// This class could of course alternatively and may be better also be defined in some external Preference,
// e.g. File Extension-ending based (say *.swing.xobject => com.MyXObjectSwingEditorPart),
// but having it inside as part of the Model is just the easiest, for now:
// TODO "view with" viewer = JavaClass/Type (extends XObjectsEclipseViewer interface)

XObject returns xbase::XExpression:

XObjects returns xbase::XExpression:

// May be one day XObjects could be natively supported in Xtend (similarly to Scala) ? Like so:
// 'object' XObject
// XExpression : ... XObject

	 
	 */